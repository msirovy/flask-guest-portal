#
# Debian 7 nginx conf to serve Flask application via uwsgi
#
#

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	error_page 		500 502 503 504 400 404 		/;

	server {
		listen 80 default_server;

		location / {
			try_files	$uri @uwsgi_app;
		}

		location @uwsgi_app {
			include		uwsgi_params;
			uwsgi_pass	unix:///tmp/portal.sock;
		}
	}

	server {
		listen 			443 default_server ssl;
		return          307 https://portal.example.com$request_uri;	
		ssl				on;
		ssl_certificate		/etc/nginx/portal.crt;
		ssl_certificate_key	/etc/nginx/portal.key;

		ssl_protocols		TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers			"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

		ssl_prefer_server_ciphers 		on;
		ssl_session_cache 				shared:SSL:10m;
	}

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
